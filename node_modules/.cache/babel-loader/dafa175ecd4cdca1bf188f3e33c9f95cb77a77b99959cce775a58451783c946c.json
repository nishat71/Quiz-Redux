{"ast":null,"code":"var _jsxFileName = \"/Users/afmiqbal/Documents/practice/React/Quiz-Redux/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { QuizContext } from '../contexts/quiz';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [quizState, dispatch] = useContext(QuizContext);\n  console.log('quizState', quizState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: [quizState.showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"congratulations\",\n        children: \"Congratulations!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"You have completed the quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"You've got \", quizState.correctAnswerCount, \" of  \", quizState.questions.length, \" right.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"next-button\",\n          onClick: () => dispatch({\n            type: \"RESTART\"\n          }),\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this), !quizState.showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [\"Question \", quizState.currentQuestionIndex + 1, \" / \", quizState.questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Question, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"next-button\",\n        onClick: () => dispatch({\n          type: 'NEXT_QUESTION'\n        }),\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"WbsaFeSpHkgQ0tM2Ih2SpWDhWlc=\");\n_c = Quiz;\nexport default Quiz;\n\n///need to create one additional property because inside showing text showing results we need to show how many correct ans we have & we dnt have such property inside our state\n/// need to create additional  shuffle function for shuffle answers every time\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useContext","QuizContext","Question","Quiz","quizState","dispatch","console","log","showResults","correctAnswerCount","questions","length","type","currentQuestionIndex"],"sources":["/Users/afmiqbal/Documents/practice/React/Quiz-Redux/src/components/Quiz.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { QuizContext } from '../contexts/quiz';\nimport Question from './Question';\n\nconst Quiz = () => {\n    const [quizState, dispatch] = useContext(QuizContext);\n    console.log('quizState', quizState);\n\n    return (\n        <div className='quiz'>\n            {quizState.showResults && (\n                <div className='results'>\n                    <div className='congratulations'>\n                        Congratulations!\n                    </div>\n                    <div className='results-info'>\n                        <div>You have completed the quiz</div>\n                        <div>\n                            You've got {quizState.correctAnswerCount} of  {quizState.questions.length} right.\n                        </div>\n                        <div className='next-button' onClick={()=>dispatch({type: \"RESTART\"})}>\n                            Restart\n                        </div>\n                    </div>\n                </div>\n            )}\n\n           {!quizState.showResults && (\n                <div>\n                     <div className='score'>\n                        Question {quizState.currentQuestionIndex + 1} / {quizState.questions.length}\n                    </div>\n                    <Question/>\n                    <div className='next-button' onClick={()=>dispatch({type : 'NEXT_QUESTION'})}>\n                        Next Question\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Quiz;\n\n///need to create one additional property because inside showing text showing results we need to show how many correct ans we have & we dnt have such property inside our state\n/// need to create additional  shuffle function for shuffle answers every time"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGL,UAAU,CAACC,WAAW,CAAC;EACrDK,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,SAAS,CAAC;EAEnC,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,WAChBA,SAAS,CAACI,WAAW,iBAClB;MAAK,SAAS,EAAC,SAAS;MAAA,wBACpB;QAAK,SAAS,EAAC,iBAAiB;QAAA,UAAC;MAEjC;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAK,SAAS,EAAC,cAAc;QAAA,wBACzB;UAAA,UAAK;QAA2B;UAAA;UAAA;UAAA;QAAA,QAAM,eACtC;UAAA,WAAK,aACU,EAACJ,SAAS,CAACK,kBAAkB,EAAC,OAAK,EAACL,SAAS,CAACM,SAAS,CAACC,MAAM,EAAC,SAC9E;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eACN;UAAK,SAAS,EAAC,aAAa;UAAC,OAAO,EAAE,MAAIN,QAAQ,CAAC;YAACO,IAAI,EAAE;UAAS,CAAC,CAAE;UAAA,UAAC;QAEvE;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAEb,EAED,CAACR,SAAS,CAACI,WAAW,iBAClB;MAAA,wBACK;QAAK,SAAS,EAAC,OAAO;QAAA,WAAC,WACX,EAACJ,SAAS,CAACS,oBAAoB,GAAG,CAAC,EAAC,KAAG,EAACT,SAAS,CAACM,SAAS,CAACC,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QACzE,eACN,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAE,eACX;QAAK,SAAS,EAAC,aAAa;QAAC,OAAO,EAAE,MAAIN,QAAQ,CAAC;UAACO,IAAI,EAAG;QAAe,CAAC,CAAE;QAAA,UAAC;MAE9E;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAEb;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAC,GApCIT,IAAI;AAAA,KAAJA,IAAI;AAsCV,eAAeA,IAAI;;AAEnB;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}