{"ast":null,"code":"var _jsxFileName = \"/Users/afmiqbal/Documents/practice/React/Quiz-Redux/src/contexts/quiz.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport questions from '../data';\nimport { shuffleAnswers } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions,\n  currentQuestionIndex: 0,\n  showResults: false,\n  correctAnswerCount: 0,\n  answers: shuffleAnswers(questions[0]),\n  currentAnswer: ''\n};\nconst reducer = (state, action) => {\n  console.log('reducer', state, action);\n  switch (action.type) {\n    case 'SELECT_ANSWER':\n      {\n        const correctAnswerCount =\n        //increase counter for correct answer\n        action.payload === state.questions[state.currentQuestionIndex].correctAnswer ? state.correctAnswerCount + 1 : state.correctAnswerCount;\n        return {\n          ...state,\n          currentAnswer: action.payload,\n          correctAnswerCount\n        };\n      }\n      ;\n    case 'NEXT_QUESTION':\n      {\n        const showResults = state.currentQuestionIndex === state.questions.length - 1;\n        const currentQuestionIndex = showResults ? state.currentQuestionIndex : state.currentQuestionIndex + 1;\n        const answers = showResults ? [] : shuffleAnswers(state.questions[currentQuestionIndex]);\n        return {\n          ...state,\n          currentQuestionIndex,\n          showResults,\n          answers,\n          currentAnswer: ''\n        };\n      }\n      ;\n    case \"RESTART\":\n      {\n        return initialState;\n      }\n    default:\n      return state;\n  }\n};\nexport const QuizContext = /*#__PURE__*/createContext();\nexport const QuizProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const value = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(QuizContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n};\n_s(QuizProvider, \"HDl9A1duRDI+maTNi9v2R1p+EwQ=\");\n_c = QuizProvider;\nvar _c;\n$RefreshReg$(_c, \"QuizProvider\");","map":{"version":3,"names":["createContext","useReducer","questions","shuffleAnswers","initialState","currentQuestionIndex","showResults","correctAnswerCount","answers","currentAnswer","reducer","state","action","console","log","type","payload","correctAnswer","length","QuizContext","QuizProvider","children","value"],"sources":["/Users/afmiqbal/Documents/practice/React/Quiz-Redux/src/contexts/quiz.js"],"sourcesContent":["import { createContext, useReducer } from \"react\";\nimport questions from '../data';\nimport { shuffleAnswers } from \"../helpers\";\n\nconst initialState = {\n    questions,\n    currentQuestionIndex: 0,\n    showResults: false,\n    correctAnswerCount: 0,\n    answers: shuffleAnswers(questions[0]),\n    currentAnswer: '',\n};\n\n\nconst reducer = (state, action) => {\n    console.log('reducer', state, action)\n    switch (action.type) {\n        case 'SELECT_ANSWER': {\n            const correctAnswerCount =       //increase counter for correct answer\n                action.payload === state.questions[state.currentQuestionIndex].correctAnswer\n                    ? state.correctAnswerCount + 1\n                    : state.correctAnswerCount\n            return {\n                ...state,\n                currentAnswer: action.payload,\n                correctAnswerCount\n            }\n        };\n\n        case 'NEXT_QUESTION': {\n            const showResults =\n                state.currentQuestionIndex === state.questions.length - 1;\n            const currentQuestionIndex = showResults\n                ? state.currentQuestionIndex\n                : state.currentQuestionIndex + 1;\n            const answers = showResults ? [] : shuffleAnswers(state.questions[currentQuestionIndex])\n\n            return {\n                ...state,\n                currentQuestionIndex,\n                showResults,\n                answers,\n                currentAnswer: '',\n            }\n        };\n        case \"RESTART\": {\n            return initialState;\n        }\n        default:\n            return state;\n    }\n};\n\n\nexport const QuizContext = createContext();\n\nexport const QuizProvider = ({ children }) => {\n    const value = useReducer(reducer, initialState)\n    return <QuizContext.Provider value={value}>\n        {children}\n    </QuizContext.Provider>\n}\n\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD,OAAOC,SAAS,MAAM,SAAS;AAC/B,SAASC,cAAc,QAAQ,YAAY;AAAC;AAE5C,MAAMC,YAAY,GAAG;EACjBF,SAAS;EACTG,oBAAoB,EAAE,CAAC;EACvBC,WAAW,EAAE,KAAK;EAClBC,kBAAkB,EAAE,CAAC;EACrBC,OAAO,EAAEL,cAAc,CAACD,SAAS,CAAC,CAAC,CAAC,CAAC;EACrCO,aAAa,EAAE;AACnB,CAAC;AAGD,MAAMC,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/BC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,KAAK,EAAEC,MAAM,CAAC;EACrC,QAAQA,MAAM,CAACG,IAAI;IACf,KAAK,eAAe;MAAE;QAClB,MAAMR,kBAAkB;QAAS;QAC7BK,MAAM,CAACI,OAAO,KAAKL,KAAK,CAACT,SAAS,CAACS,KAAK,CAACN,oBAAoB,CAAC,CAACY,aAAa,GACtEN,KAAK,CAACJ,kBAAkB,GAAG,CAAC,GAC5BI,KAAK,CAACJ,kBAAkB;QAClC,OAAO;UACH,GAAGI,KAAK;UACRF,aAAa,EAAEG,MAAM,CAACI,OAAO;UAC7BT;QACJ,CAAC;MACL;MAAC;IAED,KAAK,eAAe;MAAE;QAClB,MAAMD,WAAW,GACbK,KAAK,CAACN,oBAAoB,KAAKM,KAAK,CAACT,SAAS,CAACgB,MAAM,GAAG,CAAC;QAC7D,MAAMb,oBAAoB,GAAGC,WAAW,GAClCK,KAAK,CAACN,oBAAoB,GAC1BM,KAAK,CAACN,oBAAoB,GAAG,CAAC;QACpC,MAAMG,OAAO,GAAGF,WAAW,GAAG,EAAE,GAAGH,cAAc,CAACQ,KAAK,CAACT,SAAS,CAACG,oBAAoB,CAAC,CAAC;QAExF,OAAO;UACH,GAAGM,KAAK;UACRN,oBAAoB;UACpBC,WAAW;UACXE,OAAO;UACPC,aAAa,EAAE;QACnB,CAAC;MACL;MAAC;IACD,KAAK,SAAS;MAAE;QACZ,OAAOL,YAAY;MACvB;IACA;MACI,OAAOO,KAAK;EAAC;AAEzB,CAAC;AAGD,OAAO,MAAMQ,WAAW,gBAAGnB,aAAa,EAAE;AAE1C,OAAO,MAAMoB,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACrC,MAAMC,KAAK,GAAGrB,UAAU,CAACS,OAAO,EAAEN,YAAY,CAAC;EAC/C,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEkB,KAAM;IAAA,UACrCD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACU;AAC3B,CAAC;AAAA,GALYD,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}